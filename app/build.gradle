plugins {
    id 'com.android.application'
    id 'jacoco'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.suonk.oc_project7"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    hilt {
        enableAggregatingTask = true
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation "androidx.core:core-ktx:1.8.0"

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // MVVM
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    // Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.44'
    implementation 'androidx.hilt:hilt-work:1.0.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    // Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:20.3.0'
    implementation 'com.google.firebase:firebase-firestore:24.3.1'

    // Facebook
    implementation 'com.facebook.android:facebook-android-sdk:13.0.0'
    implementation 'com.facebook.android:facebook-login:13.0.0'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:20.0.0'

    implementation "androidx.work:work-runtime:2.7.1"

    // Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.11.1'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.38.1'
    testImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.38.1'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-android-compiler:2.38.1'
    androidTestUtil 'androidx.test:orchestrator:1.4.2-alpha04'

    debugImplementation "androidx.fragment:fragment-testing:1.5.3"
}

// open JaCoCo report after generation
def openReport(htmlOutDir) {
    final reportPath = "$htmlOutDir\\index.html"

    println "HTML Report: $reportPath"

    def os = org.gradle.internal.os.OperatingSystem.current()
    if (os.isWindows()) {
        exec { commandLine 'cmd', '/c', "start $reportPath" }
    } else if (os.isMacOsX()) {
        exec { commandLine 'open', "$reportPath" }
    } else if (os.isLinux()) {
        try {
            exec { commandLine 'xdg-open', "$reportPath" }
        } catch (Exception ignored) {
            if (localProperties.containsKey("linux-html-cmd")) {
                exec { commandLine properties.get("linux-html-cmd"), "$reportPath" }
            } else {
                println "'linux-html-cmd' property could not be found in 'local.properties'"
            }
        }
    }
}

// JaCoCo stuff
android.applicationVariants.all { variant ->
    def variantName = variant.name.capitalize()
    def filesToAnalyze = [
            '**/*ViewModel.class',
            '**/*RepositoryImpl.class',
            '**/*UseCase.class',
            '**/*ApiHolder.class'
    ]

    task("jacoco${variantName}Report", type: JacocoReport, dependsOn: "test${variantName}UnitTest") {
        group 'Reporting'
        description "Generate ${variantName} Jacoco coverage reports."

        def htmlOutDir = layout.buildDirectory.dir("reports/jacoco/$name/html").get().asFile

        doLast {
            openReport htmlOutDir
        }

        reports {
            xml.enabled(true)
            html {
                destination htmlOutDir
            }
        }

        getSourceDirectories().setFrom(files(android.sourceSets.main.java.srcDirs))
        getExecutionData().setFrom(files("${buildDir}/jacoco/test${variantName}UnitTest.exec"))
        getClassDirectories().setFrom(fileTree(dir: variant.javaCompiler.destinationDir, includes: filesToAnalyze))
    }
}